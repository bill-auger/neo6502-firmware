
driverIDs = """
 KEY_ENTER 0x28 	       	// Keyboard Return (ENTER) 			M / 13
 KEY_ESC 0x29 		   	// Keyboard ESCAPE					[ / 27
 KEY_BACKSPACE 0x2a 		// Keyboard DELETE (Backspace) 		127
 KEY_TAB 0x2b 			// Keyboard Tab 					I / 9
 KEY_SPACE 0x2c 			// Keyboard Spacebar 				
 KEY_MINUS 0x2d 			// Keyboard - and _ 
 KEY_EQUAL 0x2e 			// Keyboard = and +
 KEY_LEFTBRACE 0x2f 		// Keyboard [ and {
 KEY_RIGHTBRACE 0x30 	// Keyboard ] and }
 KEY_BACKSLASH 0x31 		// Keyboard \ and |
 KEY_HASHTILDE 0x32 		// Keyboard Non-US # and ~
 KEY_SEMICOLON 0x33 		// Keyboard ; and :
 KEY_APOSTROPHE 0x34 	// Keyboard ' and "
 KEY_GRAVE 0x35 			// Keyboard ` and ~
 KEY_COMMA 0x36 			// Keyboard , and <
 KEY_DOT 0x37 			// Keyboard . and >
 KEY_SLASH 0x38 			// Keyboard / and ?
 KEY_F1 0x3a 			// Return 129..138
 KEY_INSERT 0x49 		// Keyboard Insert 					E / 5
 KEY_HOME 0x4a 			// Keyboard Home 	 				T / 20
 KEY_PAGEUP 0x4b 		// Keyboard Page Up 				R / 18
 KEY_DELETE 0x4c 		// Keyboard Delete Forward 			H / 8
 KEY_END 0x4d 			// Keyboard End 					G / 7
 KEY_PAGEDOWN 0x4e 		// Keyboard Page Down 				F / 6
 KEY_RIGHT 0x4f 			// Keyboard Right Arrow 			D / 4
 KEY_LEFT 0x50 			// Keyboard Left Arrow 				A / 1
 KEY_DOWN 0x51 			// Keyboard Down Arrow				S / 19
 KEY_UP 0x52 			// Keyboard Up Arrow 				W / 23
 KEY_102ND 0x64 		// Keyboard Non-US \ | 	 mapped onto KEY_BACKSLASH.
"""

keys = [ None ] * 0x80
sdl2hid = {}

for m in  [x.replace("\t"," ").strip() for x in driverIDs.split("\n") if x.strip() != ""]:
	w = m.split()
	sdl2hid[w[0][4:]] = int(w[1][2:],16)

def setKey(hid,sdl):
	keys[sdl2hid[hid]] = sdl

for a in range(0,26):  											# A-Z
	keys[0x04+a] = chr(a+65)
for n in range(0,10):  											# 0-9
	keys[0x1E+n] = '0' if (n == 9) else chr(n+49) 
	keys[0x59+n] = "KP_"+keys[0x1E+n]
	keys[0x3A+n] = "F{0}".format(n+1)							# F1-F10

for k in  [ "BACKSPACE", "TAB","SPACE","MINUS","BACKSLASH","SEMICOLON","APOSTROPHE","GRAVE","COMMA","SLASH","INSERT","PAGEUP",
			"HOME","DELETE","END","PAGEDOWN","RIGHT","LEFT","DOWN","UP"]:
	setKey(k,k)

setKey("ENTER","RETURN")
setKey("ESC","ESCAPE")
setKey("EQUAL","EQUALS")
setKey("LEFTBRACE","LEFTBRACKET")
setKey("RIGHTBRACE","RIGHTBRACKET")
setKey("HASHTILDE","NONUSHASH")
setKey("DOT","PERIOD")
setKey("102ND","NONUSBACKSLASH")

print("//\n//\tThis file is automatically generated.\n//")
print("#define SDL2HIDSIZE {0}".format(len(keys)))
print("static const int SDL2HIDMapping[] = {")
print(",".join(["SDL_SCANCODE_"+x if x is not None else "0" for x in keys]))
print("};")
