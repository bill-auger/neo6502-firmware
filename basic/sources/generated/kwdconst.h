;
;	This file is automatically generated.
;
KWD_PLUS                           = $20 ; +
KWD_MINUS                          = $21 ; -
KWD_ASTERISK                       = $22 ; *
KWD_SLASH                          = $23 ; /
KWD_GREATERGREATER                 = $24 ; >>
KWD_LESSLESS                       = $25 ; <<
KWD_PERCENT                        = $26 ; %
KWD_BACKSLASH                      = $27 ; \
KWD_AMPERSAND                      = $28 ; &
KWD_VBAR                           = $29 ; |
KWD_HAT                            = $2a ; ^
KWD_GREATER                        = $2b ; >
KWD_GREATEREQUAL                   = $2c ; >=
KWD_LESS                           = $2d ; <
KWD_LESSEQUAL                      = $2e ; <=
KWD_LESSGREATER                    = $2f ; <>
KWD_EQUAL                          = $30 ; =
KWD_PLING                          = $31 ; !
KWD_QMARK                          = $32 ; ?
KWD_SYS_STR                        = $80 ; !!str
KWD_SYS_DEC                        = $81 ; !!dec
KWD_DOLLAR                         = $82 ; $
KWD_LPAREN                         = $83 ; (
KWD_RANDLPAREN                     = $84 ; rand(
KWD_RNDLPAREN                      = $85 ; rnd(
KWD_ISVALLPAREN                    = $86 ; isval(
KWD_FRACLPAREN                     = $87 ; frac(
KWD_INTLPAREN                      = $88 ; int(
KWD_TIME                           = $89 ; time
KWD_EVENTLPAREN                    = $8a ; event(
KWD_INKEYDOLLARLPAREN              = $8b ; inkey$(
KWD_ASCLPAREN                      = $8c ; asc(
KWD_CHRDOLLARLPAREN                = $8d ; chr$(
KWD_SQRLPAREN                      = $8e ; sqr(
KWD_LENLPAREN                      = $8f ; len(
KWD_ABSLPAREN                      = $90 ; abs(
KWD_SGNLPAREN                      = $91 ; sgn(
KWD_VALLPAREN                      = $92 ; val(
KWD_STRDOLLARLPAREN                = $93 ; str$(
KWD_MIDDOLLARLPAREN                = $94 ; mid$(
KWD_LEFTDOLLARLPAREN               = $95 ; left$(
KWD_RIGHTDOLLARLPAREN              = $96 ; right$(
KWD_SINLPAREN                      = $97 ; sin(
KWD_COSLPAREN                      = $98 ; cos(
KWD_TANLPAREN                      = $99 ; tan(
KWD_ATANLPAREN                     = $9a ; atan(
KWD_SQRTLPAREN                     = $9b ; sqrt(
KWD_LOGLPAREN                      = $9c ; log(
KWD_EXPLPAREN                      = $9d ; exp(
KWD_KEYLPAREN                      = $9e ; key(
KWD_WHILE                          = $b0 ; while
KWD_WEND                           = $b1 ; wend
KWD_IF                             = $b2 ; if
KWD_ENDIF                          = $b3 ; endif
KWD_DO                             = $b4 ; do
KWD_LOOP                           = $b5 ; loop
KWD_REPEAT                         = $b6 ; repeat
KWD_UNTIL                          = $b7 ; until
KWD_PROC                           = $b8 ; proc
KWD_ENDPROC                        = $b9 ; endproc
KWD_FOR                            = $ba ; for
KWD_NEXT                           = $bb ; next
KWD_CASE                           = $bc ; case
KWD_ENDCASE                        = $bd ; endcase
KWD_SYS_UN1                        = $be ; !!un1
KWD_THEN                           = $bf ; then
KWD_SYS_END                        = $c0 ; !!end
KWD_SYS_SH1                        = $c1 ; !!sh1
KWD_SYS_SH2                        = $c2 ; !!sh2
KWD_TO                             = $c3 ; to
KWD_STEP                           = $c4 ; step
KWD_LET                            = $c5 ; let
KWD_PRINT                          = $c6 ; print
KWD_INPUT                          = $c7 ; input
KWD_CALL                           = $c8 ; call
KWD_SYS                            = $c9 ; sys
KWD_EXIT                           = $ca ; exit
KWD_COMMA                          = $cb ; ,
KWD_SEMICOLON                      = $cc ; ;
KWD_COLON                          = $cd ; :
KWD_SQUOTE                         = $ce ; '
KWD_RPAREN                         = $cf ; )
KWD_READ                           = $d0 ; read
KWD_DATA                           = $d1 ; data
KWD_LSQ                            = $d2 ; [
KWD_RSQ                            = $d3 ; ]
KWD_HASH                           = $d4 ; #
KWD_PERIOD                         = $d5 ; .
KWD_ELSE                           = $d6 ; else
KWD_WHEN                           = $d7 ; when
KWD_CLEAR                          = $100 ; clear
KWD_NEW                            = $101 ; new
KWD_RUN                            = $102 ; run
KWD_STOP                           = $103 ; stop
KWD_END                            = $104 ; end
KWD_ASSERT                         = $105 ; assert
KWD_LIST                           = $106 ; list
KWD_SAVE                           = $107 ; save
KWD_LOAD                           = $108 ; load
KWD_GOSUB                          = $109 ; gosub
KWD_GOTO                           = $10a ; goto
KWD_RETURN                         = $10b ; return
KWD_RESTORE                        = $10c ; restore
KWD_DIM                            = $10d ; dim
