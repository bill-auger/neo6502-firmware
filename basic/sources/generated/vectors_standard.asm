;
;	This file is automatically generated.
;
	.section code
StandardVectorTable:
	.word	EXPUnaryInlineString     ; $80 !!str
	.word	EXPUnaryNull             ; $81 $
	.word	UnaryParenthesis         ; $82 (
	.word	UnaryRand                ; $83 rand(
	.word	UnaryRnd                 ; $84 rnd(
	.word	EXPUnaryIsVal            ; $85 isval(
	.word	UnaryInt                 ; $86 int(
	.word	Unimplemented            ; $87 time
	.word	Unimplemented            ; $88 event(
	.word	Unimplemented            ; $89 inkey$(
	.word	EXPUnaryAsc              ; $8a asc(
	.word	ChrUnary                 ; $8b chr$(
	.word	UnarySqr                 ; $8c sqr(
	.word	EXPUnaryLen              ; $8d len(
	.word	UnaryAbs                 ; $8e abs(
	.word	UnarySgn                 ; $8f sgn(
	.word	EXPUnaryVal              ; $90 val(
	.word	StrUnary                 ; $91 str$(
	.word	Unary_Mid                ; $92 mid$(
	.word	Unary_Left               ; $93 left$(
	.word	Unary_Right              ; $94 right$(
	.word	UnarySin                 ; $95 sin(
	.word	UnaryCos                 ; $96 cos(
	.word	UnaryTan                 ; $97 tan(
	.word	UnaryATan                ; $98 atan(
	.word	UnaryLog                 ; $99 log(
	.word	UnaryExp                 ; $9a exp(
	.word	Unimplemented            ; $9b key(
	.word	PeekUnary                ; $9c peek(
	.word	DeekUnary                ; $9d deek(
	.word	Unimplemented            ; $9e 
	.word	Unimplemented            ; $9f 
	.word	Unimplemented            ; $a0 
	.word	Unimplemented            ; $a1 
	.word	Unimplemented            ; $a2 
	.word	Unimplemented            ; $a3 
	.word	Unimplemented            ; $a4 
	.word	Unimplemented            ; $a5 
	.word	Unimplemented            ; $a6 
	.word	Unimplemented            ; $a7 
	.word	Unimplemented            ; $a8 
	.word	Unimplemented            ; $a9 
	.word	Unimplemented            ; $aa 
	.word	Unimplemented            ; $ab 
	.word	Unimplemented            ; $ac 
	.word	Unimplemented            ; $ad 
	.word	Unimplemented            ; $ae 
	.word	Unimplemented            ; $af 
	.word	Command_WHILE            ; $b0 while
	.word	Command_WEND             ; $b1 wend
	.word	IfCommand                ; $b2 if
	.word	EndIf                    ; $b3 endif
	.word	Command_DO               ; $b4 do
	.word	Command_LOOP             ; $b5 loop
	.word	Command_REPEAT           ; $b6 repeat
	.word	Command_UNTIL            ; $b7 until
	.word	Unimplemented            ; $b8 proc
	.word	Unimplemented            ; $b9 endproc
	.word	Command_FOR              ; $ba for
	.word	Command_NEXT             ; $bb next
	.word	Unimplemented            ; $bc case
	.word	Unimplemented            ; $bd endcase
	.word	Unimplemented            ; $be !!un1
	.word	Unimplemented            ; $bf then
	.word	RUNEndOfLine             ; $c0 !!end
	.word	Command_Shift1_Handler   ; $c1 !!sh1
	.word	Unimplemented            ; $c2 !!sh2
	.word	Unimplemented            ; $c3 !!dec
	.word	Unimplemented            ; $c4 to
	.word	Command_Let              ; $c5 let
	.word	Command_Print            ; $c6 print
	.word	Command_Input            ; $c7 input
	.word	Unimplemented            ; $c8 call
	.word	Command_Sys              ; $c9 sys
	.word	Command_EXIT             ; $ca exit
	.word	Unimplemented            ; $cb ,
	.word	Unimplemented            ; $cc ;
	.word	Unimplemented            ; $cd :
	.word	Command_Comment          ; $ce '
	.word	Unimplemented            ; $cf )
	.word	Unimplemented            ; $d0 read
	.word	Unimplemented            ; $d1 data
	.word	Unimplemented            ; $d2 [
	.word	Unimplemented            ; $d3 ]
	.word	Unimplemented            ; $d4 #
	.word	Unimplemented            ; $d5 .
	.word	ElseCode                 ; $d6 else
	.word	Unimplemented            ; $d7 when
	.word	Unimplemented            ; $d8 downto
	.word	PokeCommand              ; $d9 poke
	.word	DokeCommand              ; $da doke
	.send code
