# *******************************************************************************************
# *******************************************************************************************
#
#		Name : 		scanner.py
#		Purpose :	Scan for function etc. handlers
#		Date :		29th November 2023
#		Author : 	Paul Robson (paul@robsons.org.uk)
#
# *******************************************************************************************
# *******************************************************************************************

import os,re,sys
from tokens import *

handlers = {}

for root,dirs,files in os.walk("sources"):
	for f in [x for x in files if x.endswith(".asm")]:
		for s in open(root+os.sep+f).readlines():
			if s.find(";;") >= 0:
				m = re.match("^(.*?)\\:\\s*\\;\\;\\s*\\[(.*?)\\]",s)
				assert m is not None,"Cannot process "+s
				keyword = m.group(2).strip().lower()
				assert keyword not in handlers,keyword+" duplicate"
				handlers[keyword] = m.group(1).strip()

start = int(sys.argv[1],16)
ts = TokenSet()
assert ts.getByID(start) is not None,"Can't start at $"+sys.argv[1]				
print(";\n;\tThis file is automatically generated.\n;")
print("\t.section code")
print("{0}:".format(sys.argv[2]))
while ts.getByID(start) is not None:
	kwd = ts.getByID(start)
	start += 1

	name = kwd.getName().lower()
	id = kwd.getID()
	handler = handlers[name] if name in handlers else "Unimplemented"
	print("\t.word\t{0:24} ; ${1:x} {2}".format(handler,id,name))
print("\t.send code")


	